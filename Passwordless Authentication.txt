Task:-


Bastion= Create a user ansible
web1=ansible
web2=ansible

bast---web1----no password
web1---bast-----no password
web2---bast---- no password


sudo su -   ---------> without password has to switch to root.

==================================

bastion=create a user jenkins
web1=jenkins
web2=jenkins


bast-----web1-----no password
web1-----bast-----no password
web2-----bast-----no password

jenkins user------->sudo su -  ---> it has to prompt password to switch to root.

==================================


37 min :-web  to bas  connect bast sg:source web ser gruop.

jumping to web to bast

sswebsever tomcat (user)ssh keygen

copy ssh-copy-id tomcat(bastion)

next ssh ipaddresss


====================================

first i created instances bast ,web1,web2

bast-sg, web1(bast-sg), web2(bast-sg)

connect to the bast and first you do

first crate a user like useradd ansible and create password aslo

next :- /etc/ssh/sshd_config-----here change the "passwordauthentication no" to "password authentication yes".

after modifying this sshd_config file you have to do ("service sshd reload")
 
ssh-genkey---- it genrates .ssh folder


go to .ssh directory and agagin do  ssh-keygen

it genrates the authorized keys like rsa_pub and rsa_pri.

connect to the web1 from bastion---ssh -i pemfile ec2-user@web1ipaddress

Now i am in web1 server first you create same user in web1 like(ansible) and password also.

next :- /etc/ssh/sshd_config-----here change the passwordauthentication no to password authentication yes.

after modifying this sshd_config file you have to do (service sshd reload)
 

ssh-genkey---- it genrates .ssh folder

go to .ssh directory and agagin do  ssh-keygen.

it genrates the authorized keys like rsa_pub and rsa_pri.

next :-

from bast(ansible) to web1(ansible) ssh-copy-id web1 ipaddress--------if copying the same your to remote server(web1) no need to mention username.
from bast(ansible) to web1(*****) ssh-copy-id *****@web1 Ipaddress------>if copying the other in remote server(web1) you have to mention user name.

for reverse go to bast(ansible) to web1(ansible) ssh-copy-id bast ipaddress----------if  copying the same your to remote server

sudouser converting

visudo

## Allows people in group wheel to run all commands
# ec2-user       ALL=(ALL)       ALL



file copy : scp error.html 172.31.19.49:/home/ansible/



============================================================

1) login to bastion:
--------------------

[root@ip-172-31-11-138 ~]# cd /etc/ssh

[root@ip-172-31-11-138 ssh]# vi sshd_config

PasswordAuthentication no--- to 
PasswordAuthentication yes

[root@ip-172-31-11-138 ssh]# service sshd reload

[root@ip-172-31-11-138 ~]# useradd ansible
[root@ip-172-31-11-138 ssh]# passwd ansible
New password:
Retype new password:

[root@ip-172-31-11-138 ~]# visudo

## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)
#includedir /etc/sudoers.d
ec2-user        ALL=(ALL)       NOPASSWD: ALL
ansible         ALL=(ALL)       NOPASSWD: ALL


[root@ip-172-31-11-138 ~]# ssh-keygen

[root@ip-172-31-11-138 ~]# ls -ltra

[root@ip-172-31-11-138 ~]# cd .ssh

[root@ip-172-31-11-138 .ssh]# su - ansible

[ansible@ip-172-31-11-138 ~]$ ssh-keygen



2) take new session:-(Bastion to Webserver1):---
--------------------------------------------


[root@ip-172-31-11-138 ~]# ssh -i regawsmum.pem ec2-user@172.31.12.36

[ec2-user@ip-172-31-12-36 ~]$ sudo su -

[root@ip-172-31-12-36 ~]# cd /etc/ssh

[root@ip-172-31-12-36 ssh]# vi sshd_config

[root@ip-172-31-12-36 ssh]# service sshd reload

Redirecting to /bin/systemctl reload sshd.service

[root@ip-172-31-12-36 ssh]# cd

[root@ip-172-31-12-36 ~]# useradd ansible

[root@ip-172-31-12-36 ~]# passwd ansible

New password:
Retype new password:


[root@ip-172-31-12-36 ~]# cd

[root@ip-172-31-12-36 ~]# visudo

## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)
#includedir /etc/sudoers.d
ec2-user        ALL=(ALL)       NOPASSWD: ALL
ansible         ALL=(ALL)       NOPASSWD: ALL

[root@ip-172-31-12-36 ~]# ssh-keygen

[root@ip-172-31-12-36 ~]# ls -ltra

[root@ip-172-31-12-36 ~]# cd .ssh

[root@ip-172-31-12-36 .ssh]# su - ansible

[ansible@ip-172-31-12-36 ~]$ ssh-keygen



3) take new session:-(Bastion to Webserver2):---
----------------------------------------------


[root@ip-172-31-11-138 ~]# ssh -i regawsmum.pem ec2-user@172.31.0.123

[ec2-user@ip-172-31-0-123 ~]$ sudo su -

[root@ip-172-31-0-123 ~]# cd /etc/ssh

[root@ip-172-31-0-123 ssh]# vi sshd_config

[root@ip-172-31-0-123 ssh]# service sshd reload

[root@ip-172-31-0-123 ssh]# cd

[root@ip-172-31-0-123 ~]# useradd ansible

[root@ip-172-31-0-123 ~]# passwd ansible

New password:

Retype new password:

[root@ip-172-31-0-123 ~]# visudo

[root@ip-172-31-0-123 ~]# ls -ltra

[root@ip-172-31-0-123 ~]# cd .ssh

[root@ip-172-31-0-123 .ssh]# ssh-keygen

[root@ip-172-31-0-123 .ssh]# su - ansible

[ansible@ip-172-31-0-123 ~]$ ssh-keygen

[root@ip-172-31-0-123 ~]# ssh-keygen


4) come to bastion:--

[ansible@ip-172-31-11-138 ~]$ ssh-copy-id 172.31.12.36

Are you sure you want to continue connecting (yes/no)? yes
ansible@172.31.12.36's password:               ------------>first time it will ask password.

[ansible@ip-172-31-11-138 ~]$ ssh 172.31.12.36------------->(ssh webserver1 IPaddress)

[ansible@ip-172-31-12-36 ~]$

its connected to webserver 1


5) come to webserve1 :-(webserver1 to bastion):

[ansible@ip-172-31-12-36 ~]$ ssh-copy-id 172.31.11.138
Are you sure you want to continue connecting (yes/no)? yes
ansible@172.31.11.138's password:      --------------> first time it will ask password.

[ansible@ip-172-31-12-36 ~]$ ssh 172.31.11.138---------------->( ssh bastion ipaddress)

[ansible@ip-172-31-11-138 ~]$ 

its connected to bastion.

6) goto webserver2:- (webserver2 to bastion):

[ansible@ip-172-31-0-123 ~]$ ssh-copy-id 172.31.11.138

Are you sure you want to continue connecting (yes/no)? yes

ansible@172.31.11.138's password:      -------------------> first time it will ask password.

[ansible@ip-172-31-0-123 ~]$ ssh 172.31.11.138

[ansible@ip-172-31-11-138 ~]$

its connected to bastion.











==========================================================

Error:

[root@ip-172-31-18-9 ~]# ls -ltr
total 24
-rw-------. 1 root    root    6689 Jul 11 16:11 original-ks.cfg
-rw-------. 1 root    root    7497 Jul 11 16:11 anaconda-ks.cfg
-r--------. 1 ansible ansible   35 Jul 26 10:48 error.html
-r--------. 1 root    root    1696 Aug  4 16:57 regoregon.pem
[root@ip-172-31-18-9 ~]# chown ansible:ansbie error.html /home ansbile
chown: invalid group: ‘ansible:ansbie’
[root@ip-172-31-18-9 ~]# chown ansible:ansbie error.html /home/ansible
chown: invalid group: ‘ansible:ansbie’
[root@ip-172-31-18-9 ~]# chown ansible:ansible error.html /home/ansible
[root@ip-172-31-18-9 ~]# su - ansible
Last login: Fri Sep  1 09:38:12 UTC 2017 on pts/7
[ansible@ip-172-31-18-9 ~]$ ls -ltr
total 0
[ansible@ip-172-31-18-9 ~]$ cd /home/ansible
[ansible@ip-172-31-18-9 ~]$ ls -ltr
total 0

======================================================